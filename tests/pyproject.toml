[build-system]
requires = ["setuptools>=61.0", "versioningit"]
build-backend = "setuptools.build_meta"

[build-system.project]
name = "pypackit_tests"
dynamic = ["version"]
dependencies = ["pytest >= 7.4.2, < 8", "pytest-cov >= 4.1.0, < 5"]

[tool]
[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
namespaces = true

[tool.versioningit]
[tool.versioningit.vcs]
method = "git"
match = ["ver/[0-9]*.[0-9]*.[0-9]*"]
default-tag = "ver/0.0.0"

[tool.versioningit.tag2version]
rmprefix = "ver/"

[tool.versioningit.format]
distance = "{base_version}+{distance}-{revision}"
dirty = "{base_version}.dirty"
distance-dirty = "{base_version}+{distance}-{revision}.dirty"

[tool.versioningit.onbuild]
method = "replace-version"
regex = "^\\s*__version_details__\\s*=\\s*(?P<version>.*)"
require-match = true
replacement = "dict(\n    version=\"{version}\",\n    version_tuple={version_tuple},\n    author_date=\"{author_date:%Y.%m.%d}\",\n    build_date=\"{build_date:%Y.%m.%d}\",\n    branch=\"{branch}\",\n    distance=\"{distance}\",\n    head_commit_hash=\"{revision}\",\n)"
source-file = "tests/src/pypackit_tests/__init__.py"
build-file = "pypackit_tests/__init__.py"

[project]
name = "pypackit_tests"
dynamic = ["version"]
dependencies = ["pytest >= 7.4.2, < 8", "pytest-cov >= 4.1.0, < 5", "pipreqs"]
